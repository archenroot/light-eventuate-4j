<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Examples on Light Eventuate 4J - An event sourcing and CQRS framework with Kafka</title>
    <link>https://networknt.github.io/light-eventuate-4j/example/</link>
    <description>Recent content in Examples on Light Eventuate 4J - An event sourcing and CQRS framework with Kafka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Fri, 30 Jun 2017 20:22:34 -0400</lastBuildDate>
    
	<atom:link href="https://networknt.github.io/light-eventuate-4j/example/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Account Money Transfer Introduction</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/transfer_introduction/</link>
      <pubDate>Fri, 30 Jun 2017 20:22:34 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/transfer_introduction/</guid>
      <description>Introduction This example can be found at https://github.com/networknt/light-eventuate-example/account-management
Account Money Transfer example is build on light-4j, light-rest-4j and light-eventuate-4j which uses event sourcing and CQRS as major patterns to handle event process in multiple microservices.
The application consists of loosely coupled components that communicate using events and leverages eventual consistency, event-driven approach rather than using tranditional distributed transaction.
These components can be deployed either as separate services or packaged as a monolithic application for simplified development and testing.</description>
    </item>
    
    <item>
      <title>Example</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/</link>
      <pubDate>Thu, 27 Apr 2017 09:37:50 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/</guid>
      <description>The following examples can be found in light-example-4j repository.
 TODO List - Todo list example
 Account Money Transfer - Account Money Transfer example
  </description>
    </item>
    
    <item>
      <title>Account Money Transfer</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/transfer_integration/</link>
      <pubDate>Sat, 22 Oct 2016 20:22:34 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/transfer_integration/</guid>
      <description>Integration Test Setting Build Account-management example Get the example project from github: git clone git@github.com:networknt/light-eventuate-example.git
cd ~/networknt/light-eventuate-example/account-management
mvn clean install
Run the Event store and Mocroservices: Before starting any service, we need to make sure that light-eventuate-4j is up and running. Please follow this tutorial to set up.
Start Account money transfer service with docker compose:
cd ~/networknt/light-eventuate-example/account-management
docker-compose up
Test and verify result: From command line: Create new customer (C1):  On customer command side, system sent the cCreateCustomerCommand and apply CustomerCreatedEvent event.</description>
    </item>
    
    <item>
      <title>Account Money Transfer Example</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/transfer/</link>
      <pubDate>Sat, 22 Oct 2016 20:22:34 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/transfer/</guid>
      <description> Account Money transfer Introduction - Account Money Transfer example introduction
 Account Money Transfer Integration Test - Account Money Transfer example integration test
  </description>
    </item>
    
    <item>
      <title>TodoList</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/todo/</link>
      <pubDate>Sat, 22 Oct 2016 20:22:34 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/todo/</guid>
      <description> TODO List Introduction - Todo list example introduction
 TODO List Integration Test - Todo list example integration test
  </description>
    </item>
    
    <item>
      <title>TodoList</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/todo_integration/</link>
      <pubDate>Sat, 22 Oct 2016 20:22:34 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/todo_integration/</guid>
      <description>Integration Test Following the steps on tutorial to start event store and CDC service:
Event Store docker compose: Docker can simplify the application delivery. For light event sourcing system, to start event store by from docker:
&amp;ndash; From light-eventuate-4j project root folder: /light-eventuate-4j
&amp;ndash; run docker-compose up
system will start ALL required event store components (mysql, zookeeper, kafka)
Prepare query side DB script: (DB script saved at: /light-eventuate-example/mysql; root user for mysql: root/rootpassword)</description>
    </item>
    
    <item>
      <title>TodoList Introduction</title>
      <link>https://networknt.github.io/light-eventuate-4j/example/todo_introduction/</link>
      <pubDate>Sat, 22 Oct 2016 20:22:34 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/example/todo_introduction/</guid>
      <description>Introduction This example can be found at https://github.com/networknt/light-eventuate-example/todo
The TodoList application is the entry point POC example application for the Light Eventuate. It illustrates how you can use the platform to write an application with a microservices architecture that uses Event Sourcing and Command Query Responsibility Segregation (CQRS). The TodoList application lets users maintain a todolist.
The TodoList application is a Java application built on Light-Java platform by using Event Sourcing based programming model.</description>
    </item>
    
  </channel>
</rss>