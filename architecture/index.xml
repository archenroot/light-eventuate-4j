<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architectures on Light Eventuate 4J - An event sourcing and CQRS framework with Kafka</title>
    <link>https://networknt.github.io/light-eventuate-4j/architecture/</link>
    <description>Recent content in Architectures on Light Eventuate 4J - An event sourcing and CQRS framework with Kafka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Thu, 27 Apr 2017 09:35:23 -0400</lastBuildDate>
    
	<atom:link href="https://networknt.github.io/light-eventuate-4j/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Architecture</title>
      <link>https://networknt.github.io/light-eventuate-4j/architecture/</link>
      <pubDate>Thu, 27 Apr 2017 09:35:23 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/architecture/</guid>
      <description>Event-driven architecture An Eventuate application consists of four types of modules, each with different roles and responsibilities:
 Command-side module Query-side view updater module Query-side view query module module Outbound gateway module  Note that this is the logical architecture of the application. The modules can either be deployed together as a monolithic application or separately as standalone microservices.
Command-side modules
The command-side of an Eventuate application consists of one or more command-side modules.</description>
    </item>
    
  </channel>
</rss>