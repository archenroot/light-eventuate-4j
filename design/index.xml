<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Designs on Light Eventuate 4J - An event sourcing and CQRS framework with Kafka</title>
    <link>https://networknt.github.io/light-eventuate-4j/design/</link>
    <description>Recent content in Designs on Light Eventuate 4J - An event sourcing and CQRS framework with Kafka</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license</copyright>
    <lastBuildDate>Fri, 09 Jun 2017 13:15:31 -0400</lastBuildDate>
    
	<atom:link href="https://networknt.github.io/light-eventuate-4j/design/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Components</title>
      <link>https://networknt.github.io/light-eventuate-4j/design/component/</link>
      <pubDate>Fri, 09 Jun 2017 13:15:31 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/design/component/</guid>
      <description>light-eventuate-4 components: eventuate-cdccore : Provide API for publishing / subscribing events from Kafka
eventuate-cdcservice: Handle MySQL replication stream and publishes them to Apache Kafka;
eventuate-client/eventuate-common : Eventuate domain and core interface
eventuate-event: Eventuate event handle interface and implementation
eventuate-jdbc: Eventuate database API for persisting event to database tables
command: Command side service which use to work as container to run command side hybrid services. Copy the command side services jar files in to the /service folder in this module.</description>
    </item>
    
    <item>
      <title>Desgin</title>
      <link>https://networknt.github.io/light-eventuate-4j/design/</link>
      <pubDate>Thu, 27 Apr 2017 09:37:10 -0400</pubDate>
      
      <guid>https://networknt.github.io/light-eventuate-4j/design/</guid>
      <description>#Light-eventuate conceptual model
Entity
An entity is a business object such as an Order. An entity is an instance of an EntityType. In Domain-Driven Design terms, an entity is an aggregate. Each entity has an ID, unique among instances of the same entity type, which you can choose or allow Eventuate to assign to you. An entity has a sequence of one or more events. You can perform the following operations on an entity â€¢ Create - Create a new instance of the specified entity type with an initial sequence of events.</description>
    </item>
    
  </channel>
</rss>